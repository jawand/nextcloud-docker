version: '3.8'

services:
  # Database service
  nextcloud-db:
    image: mariadb:10.11
    container_name: nextcloud-db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - nextcloud_db_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    networks:
      - nextcloud-network
      - npm_default  # Connect to existing Nginx Proxy Manager network

  # Redis cache service
  nextcloud-redis:
    image: redis:7-alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - nextcloud_redis_data:/data
    networks:
      - nextcloud-network

  # Nextcloud application
  nextcloud-app:
    image: nextcloud:28-apache
    container_name: nextcloud-app
    restart: unless-stopped
    expose:
      - "80"  # Only expose internally, Nginx Proxy Manager handles external access
    volumes:
      - nextcloud_app_data:/var/www/html
      - nextcloud_data:/var/www/html/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_HOST=nextcloud-db
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      - OVERWRITEPROTOCOL=https
      - OVERWRITECLIURL=https://${NEXTCLOUD_DOMAIN}
      - OVERWRITEHOST=${NEXTCLOUD_DOMAIN}
      - APACHE_DISABLE_REWRITE_IP=1
      - TRUSTED_PROXIES=172.16.0.0/12 192.168.0.0/16 10.0.0.0/8
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    networks:
      - nextcloud-network
      - npm_default  # Connect to existing Nginx Proxy Manager network

  # Cron job service for background tasks
  nextcloud-cron:
    image: nextcloud:28-apache
    container_name: nextcloud-cron
    restart: unless-stopped
    volumes:
      - nextcloud_app_data:/var/www/html
      - nextcloud_data:/var/www/html/data
      - /etc/localtime:/etc/localtime:ro
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    networks:
      - nextcloud-network

networks:
  nextcloud-network:
    driver: bridge
  npm_default:
    external: true  # Use existing Nginx Proxy Manager network

volumes:
  nextcloud_db_data:
    driver: local
  nextcloud_redis_data:
    driver: local
  nextcloud_app_data:
    driver: local
  nextcloud_data:
    driver: local